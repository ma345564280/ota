<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ota.dao.RoleMapper" >
  <resultMap id="BaseResultMap" type="com.ota.domain.Role" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="role" property="role" jdbcType="VARCHAR" />
    <result column="authority1" property="authority1" jdbcType="CHAR" />
    <result column="authority2" property="authority2" jdbcType="CHAR" />
    <result column="authority3" property="authority3" jdbcType="CHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    role, authority1, authority2, authority3
  </sql>
  
  <select id="checkNewRole" resultType="int" parameterType="String">
	select count(*) from t_role where role=#{role,jdbcType=VARCHAR};
  </select>
  
  <select id="selectAllRoles" resultType="Role">
      select * from t_role;
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from t_role
    where role = #{role,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_role
    where role = #{role,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.ota.domain.Role" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_role (role, authority1, authority2, 
      authority3)
    values (#{role,jdbcType=VARCHAR}, #{authority1,jdbcType=CHAR}, #{authority2,jdbcType=CHAR}, 
      #{authority3,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ota.domain.Role" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="role != null" >
        role,
      </if>
      <if test="authority1 != null" >
        authority1,
      </if>
      <if test="authority2 != null" >
        authority2,
      </if>
      <if test="authority3 != null" >
        authority3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="role != null" >
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="authority1 != null" >
        #{authority1,jdbcType=CHAR},
      </if>
      <if test="authority2 != null" >
        #{authority2,jdbcType=CHAR},
      </if>
      <if test="authority3 != null" >
        #{authority3,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ota.domain.Role" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_role
    <set >
      <if test="authority1 != null" >
        authority1 = #{authority1,jdbcType=CHAR},
      </if>
      <if test="authority2 != null" >
        authority2 = #{authority2,jdbcType=CHAR},
      </if>
      <if test="authority3 != null" >
        authority3 = #{authority3,jdbcType=CHAR},
      </if>
    </set>
    where role = #{role,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ota.domain.Role" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_role
    set authority1 = #{authority1,jdbcType=CHAR},
      authority2 = #{authority2,jdbcType=CHAR},
      authority3 = #{authority3,jdbcType=CHAR}
    where role = #{role,jdbcType=VARCHAR}
  </update>
</mapper>